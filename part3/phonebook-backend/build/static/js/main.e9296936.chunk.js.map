{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","value","onChange","PersonForm","onSubmit","valueName","onChangeName","valueNumber","onChangeNumber","type","Person","name","number","Persons","filter","persons","deleteName","person","toLowerCase","includes","map","key","onClick","Notification","message","messageType","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setmessage","setMessageType","useEffect","personService","initialPersons","event","target","preventDefault","duplicateCheck","find","alert","concat","setTimeout","catch","error","JSON","stringify","window","confirm","returnedPerson","personToBeRemoved","n","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9296936.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }\n","import React from 'react'\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div>\n      filters shown with\n      <input\n      value={value}\n      onChange={onChange}\n      />\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm =\n  ({ onSubmit, valueName, onChangeName, valueNumber, onChangeNumber }) => {\n\n    return (\n      <form onSubmit={onSubmit}>\n      <div>\n        name:\n        <input\n          value={valueName}\n          onChange={onChangeName}\n        />\n      </div>\n\n      <div>\n        number:\n        <input\n          value={valueNumber}\n          onChange={onChangeNumber}\n        />\n      </div>\n\n      <div>\n        <button\n          type=\"submit\">add\n        </button>\n      </div>\n    </form>\n    )\n  }\n\nexport default PersonForm\n","import React from 'react'\n\nconst Person = ({ name, number }) => {\n  return (\n    <span>\n      {name} {number}\n    </span>\n  )\n}\n\nexport default Person\n","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({ filter, persons, deleteName }) => {\n  return (\n    persons.filter(person =>\n      person.name.toLowerCase().includes(filter.toLowerCase())).map(person =>\n        <span key={person.id}>\n          <Person \n            name={person.name} \n            number={person.number} \n          />\n          {' '}\n          <button \n            type=\"button\" \n            value={person.id}\n            onClick={deleteName}>\n            delete\n          </button>\n          <br />\n        </span>\n      )\n  )\n}\n\nexport default Persons\n","import React from 'react'\n\nconst Notification = ({ message, messageType }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={messageType}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport './index.css'\nimport personService from './services/persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n\n  // Application's state\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [message, setmessage] = useState(null)\n  const [messageType, setMessageType] = useState(null) // 'confirmation' or 'error'\n\n  // Application's effect\n  useEffect(() => {\n    personService\n      .getAll()\n        .then(initialPersons => {\n        setPersons(initialPersons)\n        })\n  }, [])\n\n  // Event handlers\n  const addName = (event) => {\n    event.preventDefault()\n\n    // Check for duplicates\n    const duplicateCheck = persons.find(person => person.name === newName)\n    if (typeof duplicateCheck !== 'undefined' && duplicateCheck.number !== newNumber) {\n      if (window.confirm(`${duplicateCheck.name} is already added to phonebook, replace the old number with a new one?`)) {\n        personService\n          .update(duplicateCheck.id, { name: duplicateCheck.name, number: newNumber})\n          .then(returnedPerson => {\n              setPersons(persons.map(person => \n                        person.id !== duplicateCheck.id ? person : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n          })\n      }\n      return\n    } else if (typeof duplicateCheck !== 'undefined') {\n        alert(`${newName} is already added to phonebook`)\n        setNewName('')\n        setNewNumber('')\n        return\n    }\n\n    // If the name is not in phonebook, add a new person\n    personService\n      .create({ name: newName, number: newNumber })\n      .then(response => {\n        setPersons(persons.concat(response))\n        setNewName('')\n        setNewNumber('')\n        setMessageType('confirmation')\n        setmessage(`Added ${response.name}`)\n        setTimeout(() => {\n          setmessage(null)\n          setMessageType(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setMessageType('error')\n        setmessage(`${JSON.stringify(error.response.data)}`)\n        setTimeout(() => {\n          setmessage(null)\n          setMessageType('error')\n        }, 5000)\n      })\n  }\n\n  const deleteName = (event) => {\n    event.preventDefault()\n    const personToBeRemoved = persons.find(person => person.id === event.target.value)\n    const id = personToBeRemoved.id\n    const name = personToBeRemoved.name\n    if (window.confirm(`Delete ${name} ?`)) {\n      personService.remove(id)\n      .catch(error => {\n        setMessageType('error')\n        setmessage(`Information of ${name} has already been removed from server`)\n        setTimeout(() => {\n          setmessage(null)\n          setMessageType('error')\n        }, 5000)\n        setPersons(persons.filter(n => n.id !== id))\n      })\n      setPersons(persons.filter(n => n.id !== id))\n    }\n  }\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => setNewFilter(event.target.value)\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} messageType={messageType} />\n      <Filter value={newFilter} onChange={handleFilterChange} />\n      <h2>add a new</h2>\n      <PersonForm onSubmit={addName}\n                  valueName={newName}\n                  onChangeName={handleNameChange}\n                  valueNumber={newNumber}\n                  onChangeNumber={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons filter={newFilter} persons={persons} deleteName={deleteName} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}