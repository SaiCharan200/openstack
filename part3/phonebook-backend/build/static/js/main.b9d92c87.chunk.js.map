{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","value","onChange","PersonForm","onSubmit","valueName","onChangeName","valueNumber","onChangeNumber","type","Person","name","number","Persons","filter","persons","deleteName","person","includes","map","key","onClick","Notification","message","messageType","className","App","useEffect","personService","initialPersons","setPersons","useState","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setmessage","setMessageType","event","target","preventDefault","duplicateCheck","find","alert","concat","setTimeout","returnedPerson","window","confirm","personToBeRemoved","catch","error","n","ReactDOM","render","document","getElementById"],"mappings":"2OACMA,EAAU,eAsBD,EApBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB5B,EAfA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,GAEd,OADgBP,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCN5BM,EAZA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACvB,OACE,kDAEE,2BACAD,MAAOA,EACPC,SAAUA,MCwBDC,EA7Bb,SAAC,GAAwE,IAAtEC,EAAqE,EAArEA,SAAUC,EAA2D,EAA3DA,UAAWC,EAAgD,EAAhDA,aAAcC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAEjD,OACE,0BAAMJ,SAAUA,GAChB,qCAEE,2BACEH,MAAOI,EACPH,SAAUI,KAId,uCAEE,2BACEL,MAAOM,EACPL,SAAUM,KAId,6BACE,4BACEC,KAAK,UADP,UCdOC,EARA,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACtB,OACE,8BACGD,EADH,IACUC,ICoBCC,EAtBC,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAClC,OACED,EAAQD,QAAO,SAAAG,GAAM,OACnBA,EAAON,KAAKO,SAASJ,MAASK,KAAI,SAAAF,GAAM,OACtC,0BAAMG,IAAKH,EAAOpB,IAChB,kBAAC,EAAD,CACEc,KAAMM,EAAON,KACbC,OAAQK,EAAOL,SAEhB,IACD,4BACEH,KAAK,SACLR,MAAOgB,EAAOpB,GACdwB,QAASL,GAHX,UAMA,kCCLKM,EAZM,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAC/B,OAAgB,OAAZD,EACK,KAIP,yBAAKE,UAAWD,GACbD,IC0GQG,EA3GH,WAEVC,qBAAU,WACRC,IAEKpC,MAAK,SAAAqC,GACNC,EAAWD,QAEd,IARa,MAWcE,mBAAS,IAXvB,mBAWThB,EAXS,KAWAe,EAXA,OAYcC,mBAAS,IAZvB,mBAYTC,EAZS,KAYAC,EAZA,OAakBF,mBAAS,IAb3B,mBAaTG,EAbS,KAaEC,EAbF,OAckBJ,mBAAS,IAd3B,mBAcTK,EAdS,KAcEC,EAdF,OAecN,mBAAS,MAfvB,mBAeTR,EAfS,KAeAe,EAfA,OAgBsBP,mBAAS,MAhB/B,mBAgBTP,EAhBS,KAgBIe,EAhBJ,KAqFhB,OACE,6BACE,yCAEA,kBAAC,EAAD,CAAchB,QAASA,EAASC,YAAaA,IAE7C,kBAAC,EAAD,CAAQvB,MAAOmC,EAAWlC,SARH,SAACsC,GAAD,OAAWH,EAAaG,EAAMC,OAAOxC,UAU5D,yCACA,kBAAC,EAAD,CAAYG,SA3EA,SAACoC,GACfA,EAAME,iBAGN,IAAMC,EAAiB5B,EAAQ6B,MAAK,SAAA3B,GAAM,OAAIA,EAAON,OAASqB,KAC9D,GAA8B,qBAAnBW,GAAkCA,EAAe/B,SAAWsB,EAahE,MAA8B,qBAAnBS,GACdE,MAAM,GAAD,OAAIb,EAAJ,mCACLC,EAAW,SACXE,EAAa,UAKjBP,EACU,CAAEjB,KAAMqB,EAASpB,OAAQsB,IAChC1C,MAAK,SAAAC,GACJqC,EAAWf,EAAQ+B,OAAOrD,IAC1BwC,EAAW,IACXE,EAAa,IACbI,EAAe,gBACfD,EAAW,SAAD,OAAU7C,EAASkB,OAC7BoC,YAAW,WACTT,EAAW,MACXC,EAAe,QACd,QA/BLX,EACUe,EAAe9C,GAAI,CAAEc,KAAMgC,EAAehC,KAAMC,OAAQsB,IAC/D1C,MAAK,SAAAwD,GACAC,OAAOC,QAAP,UAAkBF,EAAerC,KAAjC,0FAEFmB,EAAWf,EAAQI,KAAI,SAAAF,GAAM,OACnBA,EAAOpB,KAAO8C,EAAe9C,GAAKoB,EAAS+B,MAEvDf,EAAW,IACXE,EAAa,QA6DL9B,UAAW2B,EACX1B,aAfS,SAACkC,GAAD,OAAWP,EAAWO,EAAMC,OAAOxC,QAgB5CM,YAAa2B,EACb1B,eAhBW,SAACgC,GAAD,OAAWL,EAAaK,EAAMC,OAAOxC,UAmB5D,uCACA,kBAAC,EAAD,CAASa,OAAQsB,EAAWrB,QAASA,EAASC,WAzC/B,SAACwB,GAClBA,EAAME,iBACN,IAAMS,EAAoBpC,EAAQ6B,MAAK,SAAA3B,GAAM,OAAIA,EAAOpB,KAAO2C,EAAMC,OAAOxC,SACtEJ,EAAKsD,EAAkBtD,GACvBc,EAAOwC,EAAkBxC,KAC3BsC,OAAOC,QAAP,iBAAyBvC,EAAzB,SACFiB,EAAqB/B,GACpBuD,OAAM,SAAAC,GACLd,EAAe,SACfD,EAAW,kBAAD,OAAmB3B,EAAnB,0CACVoC,YAAW,WACTT,EAAW,MACXC,EAAe,WACd,KACHT,EAAWf,EAAQD,QAAO,SAAAwC,GAAC,OAAIA,EAAEzD,KAAOA,SAE1CiC,EAAWf,EAAQD,QAAO,SAAAwC,GAAC,OAAIA,EAAEzD,KAAOA,YCjF9C0D,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b9d92c87.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }\n","import React from 'react'\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div>\n      filters shown with\n      <input\n      value={value}\n      onChange={onChange}\n      />\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm =\n  ({ onSubmit, valueName, onChangeName, valueNumber, onChangeNumber }) => {\n\n    return (\n      <form onSubmit={onSubmit}>\n      <div>\n        name:\n        <input\n          value={valueName}\n          onChange={onChangeName}\n        />\n      </div>\n\n      <div>\n        number:\n        <input\n          value={valueNumber}\n          onChange={onChangeNumber}\n        />\n      </div>\n\n      <div>\n        <button\n          type=\"submit\">add\n        </button>\n      </div>\n    </form>\n    )\n  }\n\nexport default PersonForm\n","import React from 'react'\n\nconst Person = ({ name, number }) => {\n  return (\n    <span>\n      {name} {number}\n    </span>\n  )\n}\n\nexport default Person\n","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({ filter, persons, deleteName }) => {\n  return (\n    persons.filter(person =>\n      person.name.includes(filter)).map(person =>\n        <span key={person.id}>\n          <Person \n            name={person.name} \n            number={person.number} \n          />\n          {' '}\n          <button \n            type=\"button\" \n            value={person.id}\n            onClick={deleteName}>\n            delete\n          </button>\n          <br />\n        </span>\n      )\n  )\n}\n\nexport default Persons\n","import React from 'react'\n\nconst Notification = ({ message, messageType }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={messageType}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport './index.css'\nimport personService from './services/persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  // Application's effect\n  useEffect(() => {\n    personService\n      .getAll()\n        .then(initialPersons => {\n        setPersons(initialPersons)\n        })\n  }, [])\n\n  // Application's state\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [message, setmessage] = useState(null)\n  const [messageType, setMessageType] = useState(null) // 'confirmation' or 'error'\n\n  // Event handlers\n  const addName = (event) => {\n    event.preventDefault()\n\n    // Check for duplicates\n    const duplicateCheck = persons.find(person => person.name === newName)\n    if (typeof duplicateCheck !== 'undefined' && duplicateCheck.number !== newNumber) {\n      personService\n        .update(duplicateCheck.id, { name: duplicateCheck.name, number: newNumber})\n        .then(returnedPerson => {\n          if (window.confirm(`${returnedPerson.name} is already added to phonebook, \n            replace the old number with a new one?`)) {\n            setPersons(persons.map(person => \n                      person.id !== duplicateCheck.id ? person : returnedPerson))\n          }\n          setNewName('')\n          setNewNumber('')\n        })\n        return\n    } else if (typeof duplicateCheck !== 'undefined') {\n        alert(`${newName} is already added to phonebook`)\n        setNewName('')\n        setNewNumber('')\n        return\n    }\n\n    // If the name is not in phonebook, add a new person\n    personService\n      .create({ name: newName, number: newNumber })\n      .then(response => {\n        setPersons(persons.concat(response))\n        setNewName('')\n        setNewNumber('')\n        setMessageType('confirmation')\n        setmessage(`Added ${response.name}`)\n        setTimeout(() => {\n          setmessage(null)\n          setMessageType(null)\n        }, 5000)\n      })\n\n  }\n\n  const deleteName = (event) => {\n    event.preventDefault()\n    const personToBeRemoved = persons.find(person => person.id === event.target.value)\n    const id = personToBeRemoved.id\n    const name = personToBeRemoved.name\n    if (window.confirm(`Delete ${name} ?`)) {\n      personService.remove(id)\n      .catch(error => {\n        setMessageType('error')\n        setmessage(`Information of ${name} has already been removed from server`)\n        setTimeout(() => {\n          setmessage(null)\n          setMessageType('error')\n        }, 5000)\n        setPersons(persons.filter(n => n.id !== id))\n      })\n      setPersons(persons.filter(n => n.id !== id))\n    }\n  }\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => setNewFilter(event.target.value)\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n\n      <Notification message={message} messageType={messageType} />\n\n      <Filter value={newFilter} onChange={handleFilterChange} />\n\n      <h2>add a new</h2>\n      <PersonForm onSubmit={addName}\n                  valueName={newName}\n                  onChangeName={handleNameChange}\n                  valueNumber={newNumber}\n                  onChangeNumber={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      <Persons filter={newFilter} persons={persons} deleteName={deleteName} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}